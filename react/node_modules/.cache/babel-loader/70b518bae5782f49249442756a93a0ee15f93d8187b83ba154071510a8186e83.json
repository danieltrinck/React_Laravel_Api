{"ast":null,"code":"export const cpfMask = value => {\n  return value.replace(/\\D/g, '') // substitui qualquer caracter que nao seja numero por nada\n  .replace(/(\\d{3})(\\d)/, '$1.$2') // captura 2 grupos de numero o primeiro de 3 e o segundo de 1, apos capturar o primeiro grupo ele adiciona um ponto antes do segundo grupo de numero\n  .replace(/(\\d{3})(\\d)/, '$1.$2').replace(/(\\d{3})(\\d{1,2})/, '$1-$2').replace(/(-\\d{2})\\d+?$/, '$1'); // captura 2 numeros seguidos de um traço e não deixa ser digitado mais nada\n};","map":{"version":3,"names":["cpfMask","value","replace"],"sources":["/app/src/components/cpfMask.js"],"sourcesContent":["export const cpfMask = value => {\n    return value\n      .replace(/\\D/g, '') // substitui qualquer caracter que nao seja numero por nada\n      .replace(/(\\d{3})(\\d)/, '$1.$2') // captura 2 grupos de numero o primeiro de 3 e o segundo de 1, apos capturar o primeiro grupo ele adiciona um ponto antes do segundo grupo de numero\n      .replace(/(\\d{3})(\\d)/, '$1.$2')\n      .replace(/(\\d{3})(\\d{1,2})/, '$1-$2')\n      .replace(/(-\\d{2})\\d+?$/, '$1') // captura 2 numeros seguidos de um traço e não deixa ser digitado mais nada\n  }"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAGC,KAAK,IAAI;EAC5B,OAAOA,KAAK,CACTC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;EAAA,CACnBA,OAAO,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;EAAA,CAChCA,OAAO,CAAC,aAAa,EAAE,OAAO,CAAC,CAC/BA,OAAO,CAAC,kBAAkB,EAAE,OAAO,CAAC,CACpCA,OAAO,CAAC,eAAe,EAAE,IAAI,CAAC,EAAC;AACpC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}