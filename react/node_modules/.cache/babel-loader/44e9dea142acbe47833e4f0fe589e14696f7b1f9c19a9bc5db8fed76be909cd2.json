{"ast":null,"code":"var _jsxFileName = \"/app/src/components/inputMaskCep.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst InputMaskCep = ({\n  name\n}, {\n  value\n}) => {\n  _s();\n  const [card, setCard] = useState();\n  const inputCard = useRef();\n  const handleChange = () => {\n    const cardValue = inputCard.current.value.replace(/\\D/g, '').match(/(\\d{0,5})(\\d{0,3})/);\n    inputCard.current.value = !cardValue[2] ? cardValue[1] : `${cardValue[1]}-${cardValue[2]}`;\n    const numbers = inputCard.current.value.replace(/(\\D)/g, '');\n    setCard(numbers);\n  };\n  useEffect(() => {\n    handleChange();\n  }, [card]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: name,\n      value: value,\n      ref: inputCard,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(InputMaskCep, \"2WbB1zeSUR0H3PLgBq+KsCBJmfI=\");\n_c = InputMaskCep;\nexport default InputMaskCep;\nvar _c;\n$RefreshReg$(_c, \"InputMaskCep\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","InputMaskCep","name","value","_s","card","setCard","inputCard","handleChange","cardValue","current","replace","match","numbers","children","type","ref","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/app/src/components/inputMaskCep.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst InputMaskCep = ({name}, {value}) => {\n  const [card, setCard] = useState();\n  const inputCard = useRef();\n\n  const handleChange = () => {\n    const cardValue = inputCard.current.value\n      .replace(/\\D/g, '')\n      .match(/(\\d{0,5})(\\d{0,3})/);\n    inputCard.current.value = !cardValue[2]\n      ? cardValue[1]\n      : `${cardValue[1]}-${cardValue[2]}`;\n    const numbers = inputCard.current.value.replace(/(\\D)/g, '');\n    setCard(numbers);\n  };\n\n  useEffect(() => {\n    handleChange();\n  }, [card]);\n\n  return (\n    <>\n      <input type=\"text\" name={name} value={value} ref={inputCard} onChange={handleChange} />\n    </>\n  );\n};\n\nexport default InputMaskCep;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE3D,MAAMC,YAAY,GAAGA,CAAC;EAACC;AAAI,CAAC,EAAE;EAACC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,CAAC;EAClC,MAAMa,SAAS,GAAGX,MAAM,CAAC,CAAC;EAE1B,MAAMY,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,SAAS,GAAGF,SAAS,CAACG,OAAO,CAACP,KAAK,CACtCQ,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAClBC,KAAK,CAAC,oBAAoB,CAAC;IAC9BL,SAAS,CAACG,OAAO,CAACP,KAAK,GAAG,CAACM,SAAS,CAAC,CAAC,CAAC,GACnCA,SAAS,CAAC,CAAC,CAAC,GACX,GAAEA,SAAS,CAAC,CAAC,CAAE,IAAGA,SAAS,CAAC,CAAC,CAAE,EAAC;IACrC,MAAMI,OAAO,GAAGN,SAAS,CAACG,OAAO,CAACP,KAAK,CAACQ,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC;IAC5DL,OAAO,CAACO,OAAO,CAAC;EAClB,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACda,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACH,IAAI,CAAC,CAAC;EAEV,oBACEP,OAAA,CAAAE,SAAA;IAAAc,QAAA,eACEhB,OAAA;MAAOiB,IAAI,EAAC,MAAM;MAACb,IAAI,EAAEA,IAAK;MAACC,KAAK,EAAEA,KAAM;MAACa,GAAG,EAAET,SAAU;MAACU,QAAQ,EAAET;IAAa;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBACvF,CAAC;AAEP,CAAC;AAACjB,EAAA,CAxBIH,YAAY;AAAAqB,EAAA,GAAZrB,YAAY;AA0BlB,eAAeA,YAAY;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}